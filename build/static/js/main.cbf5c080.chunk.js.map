{"version":3,"sources":["apiConfig.js","renderPromise.js","PlaylistModel.js","components/Navbar/NavbarPresentational.js","actions/index.js","components/Navbar/NavbarContainer.js","components/Search/SearchPresentational.js","components/Search/SearchContainer.js","components/Playlist/PlaylistPresentational.js","components/Playlist/PlaylistContainer.js","components/App.js","reducers/songs.js","reducers/currentPlaylist.js","reducers/audioMuted.js","reducers/navbarHidden.js","reducers/index.js","index.js"],"names":["playlistENDPOINT","audioENDPOINT","clientID","secretID","RenderPromise","promise","hyperscript","node","this","cancelCallback","doCancel","ReactDOM","render","createSpinner","then","result","catch","error","errorSpan","message","React","createElement","className","height","alt","src","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","displaySongs","songListPromise","songs","Fragment","map","song","createSongDisplay","document","getElementById","setTimeout","body","querySelectorAll","forEach","root","id","searchAudioFeatures","features","childNodes","remove","svg","window","appendChild","energyElement","keyElement","tempoElement","innerHTML","energy","key","tempo","getBlob","scale","getElementsByTagName","length","track","preview_url","onDragStart","e","draggable","onContextMenu","openTooltip","muted","loop","name","artists","artist","href","external_urls","spotify","target","rel","width","ev","console","log","dataTransfer","setData","JSON","stringify","effectAllowed","getElementsByClassName","tooltip","currentClass","classList","add","searchPlaylist","retrieve","data","items","audio_features","query","type","payload","apiConfig","encodedPayload","Buffer","toString","access_token","myHeaders","Headers","append","urlencoded","URLSearchParams","token","fetch","method","headers","redirect","response","json","a","fetchString","playlist","getSong","saveSong","collection","doc","set","title","preview","timestamp","FieldValue","serverTimestamp","loadSong","songID","get","deleteSong","delete","loadCollection","querySnapshot","i","push","NavbarPresentational","homepageControl","nav","playlistControl","handleClick","onDrop","openNav","onDragOver","selectPlaylist","playlistAction","playlistMessage","dropEvent","dragOverEvent","value","onClick","audioMuted","addSong","setCurrentPlaylist","loadPlaylist","connect","state","ownProps","currentPlaylist","navbarHidden","dispatch","history","firstChild","removeChild","bool","muteButton","querySelector","audioElements","Object","keys","navbarDiv","getData","parse","miniPreview","rootCopy","cloneNode","setAttribute","addEventListener","removeSong","children","currChild","getAttribute","style","preventDefault","playlistID","button","disabled","selectedButton","SearchPresentational","whenDone","onResultsClick","onAdd","onLoadPlaylist","useEffect","event","clickedNode","loadedSongs","clickOnSong","contains","clickOnAddButton","clickedSongId","parentNode","find","d","idPlaylist","PlaylistPresentational","getSongCollection","onDelete","displaySong","doneCallback","coll","row","column1","column2","createTextNode","h4","column3","deleteBtn","column4","el","App","exact","path","to","component","Search","Playlist","Navbar","action","alreadyPresent","some","alert","filter","combineReducers","persistedState","localStorage","getItem","store","createStore","rootReducer","subscribe","setItem","getState"],"mappings":"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","file":"static/js/main.cbf5c080.chunk.js","sourcesContent":["export const tokenENDPOINT= \"https://accounts.spotify.com/api/token\";\r\nexport const playlistENDPOINT = \"https://api.spotify.com/v1/playlists/\";\r\nexport const audioENDPOINT = \"https://api.spotify.com/v1/audio-features/\";\r\n\r\nexport const clientID = \"440325bb5cab47af9d5f1af2cad762fa\";\r\nexport const secretID = \"c5bf0b3bd0ca4d4eac5b684505d7665d\";\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nclass RenderPromise {\n\n  static render(promise, hyperscript, node) {\n    if (this.cancelCallback) this.cancelCallback();\n  \tlet doCancel = false;\n\n  \tReactDOM.render(this.createSpinner(), node);\n\n  \tpromise.then(result => {\n  \t\t\tif (doCancel) return;\n        ReactDOM.render(hyperscript(result), node);\n  \t\t})\n  \t  .catch(error => {\n  \t\t\tif (doCancel) return;\n  \t\t\tconst errorSpan = (<span>{error.message}</span>);\n        ReactDOM.render(errorSpan, node);\n  \t\t})\n\n  \t\tthis.cancelCallback = () => {doCancel = true;};\n  }\n\n  static createSpinner() {\n  \treturn React.createElement(\"div\", {className: \"spinnerClass\"},\n            React.createElement(\"img\", {height: 100,  alt: \"\", src: \"spinner.svg\"}));\n  }\n\n}\n\nexport default RenderPromise;\n","import * as apiConfig from './apiConfig.js'\nimport RenderPromise from './renderPromise.js'\nimport React from 'react'\n\nconst firebase = require(\"firebase\");\n// Required for side-effects\nrequire(\"firebase/firestore\");\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAPO4fSzO6KUyphdBvNLHr0UMr7ArpPVK4\",\n  authDomain: \"iprog2020.firebaseapp.com\",\n  databaseURL: \"https://iprog2020.firebaseio.com\",\n  projectId: \"iprog2020\",\n  storageBucket: \"iprog2020.appspot.com\",\n  messagingSenderId: \"667835768822\",\n  appId: \"1:667835768822:web:407e0382496fd8a7f731d7\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\nexport function displaySongs(songListPromise) {\n  RenderPromise.render(\n    songListPromise,\n    songs => React.createElement(React.Fragment, {}, songs.map(song => createSongDisplay(song))),\n    document.getElementById('resultsDiv'));\n\n\n    setTimeout(() => {\n      let songs = document.body.querySelectorAll('.song');\n      songs.forEach(song => {\n        let root = document.getElementById(song.id);\n        searchAudioFeatures(song.id).then(features => {\n          \n          //Add svg blobs to the placeholder divs\n          root.childNodes[2].remove(root.childNodes['img']);\n          var svg = window[\"blobCreator\"](features,1);\n          root.appendChild(svg);\n          \n          //Add features info into the tooltips\n          var energyElement = document.getElementById(\"energyH-\"+song.id);\n          var keyElement = document.getElementById(\"keyH-\"+song.id);\n          var tempoElement = document.getElementById(\"tempoH-\"+song.id);\n          if (energyElement !== null){\n            energyElement.innerHTML = 'Energy: ' + features.energy;\n            keyElement.innerHTML = 'Key: ' + features.key;\n            tempoElement.innerHTML = 'Tempo: ' + features.tempo + ' BPM';\n          };\n        });\n      });\n    }, 1000);\n}\n\nexport function getBlob(id, scale, root) {\n  setTimeout(() => {\n    let root = document.getElementById(id);\n    if (root === null || root.getElementsByTagName('svg').length) {\n      return;\n    }\n    searchAudioFeatures(id).then(features => {\n      root.childNodes[2].remove(root.childNodes['img']);\n      var svg = window[\"blobCreator\"](features, scale);\n      root.appendChild(svg);\n      \n    });\n\n  }, 1000);\n\n}\n\n\n/*\n  Give drag drop element to this.\n*/\nexport function createSongDisplay(song) {\n\n  if (song.track.preview_url !== null){\n    return (\n      <div id={song.track.id} key={song.track.id} className='song draggable songtooltip'\n            onDragStart={(e)=>onDragStart(e, song)} draggable onContextMenu={(e)=>openTooltip(song.track.id)}>\n        <audio id={'audio'+song.track.id} src={song.track.preview_url} muted loop></audio>\n        <div id={\"tooltip-\"+song.track.id} className=\"tooltiptext hidden\">\n\n\n          <h3>{song.track.name}</h3>\n          <h4>{song.track.artists.map(artist => {return artist.name})}</h4>\n\n          <button>Add</button>\n          <br/>\n          <br/>\n\n          <button className=\"secondary-button\">Remove</button>\n          <br/>\n          <br/>\n          <br/>\n\n\n          <a href={song.track.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">Open in Spotify</a>\n          <br/>\n          <br/>\n          <br/>\n\n          <h4 id={\"energyH-\"+song.track.id}></h4>\n          <h4 id={\"tempoH-\"+song.track.id}></h4>\n          <h4 id={\"keyH-\"+song.track.id}></h4>\n          \n        </div>\n        {/* <button className='addButton buttonInvisible'>Add to playlist</button><br/> */}\n        <img className='loadingBlobs' src=\"blurryblobBW.svg\"  alt=\"blobyfied song\" height='300' width='300'/>\n        <br/>\n      </div>\n    );\n  }\n}\nconst onDragStart = (ev, song) => {\n  console.log(\"Song \" + song.track.name + \" is being dragged\");\n  ev.dataTransfer.setData(\"text/plain\", JSON.stringify(song));\n  //Want to transfer the html element being dragged\n  //let root = document.getElementById(song.track.id);\n  //If the element has an svg child => the blob\n  // if(root.getElementsByTagName('svg').length) {\n  //   ev.dataTransfer.setData(\"text/html\", root);\n  // }\n  ev.dataTransfer.effectAllowed = \"copy\";\n}\nconst openTooltip = (id) => {\n  console.log(\"open tooltip\")\n  var visibleTooltips = document.getElementsByClassName(\"tooltiptext visible\");\n  \n    // for (var i = 0, len = visibleTooltips.length; i < len; i++) {\n    //   console.log(visibleTooltips[i])\n    //   visibleTooltips[i].classList.add('hidden');\n    //   visibleTooltips[i].classList.remove('visible');\n    //   }\n\n  // var visibleTooltips = document.getElementsByClassName(\"tooltiptext visible\");\n  // visibleTooltips.classList.add('hidden');\n  // visibleTooltips.classList.remove('visible');\n  \n  var tooltip = document.getElementById(\"tooltip-\"+id);\n  let currentClass = tooltip.classList[1];\n  tooltip.classList.remove(currentClass);\n  tooltip.classList.add((currentClass === 'hidden'? 'visible' : 'hidden'));\n}\n\nexport function searchPlaylist(name) {\n  // Replace variables in case they are falsy (e.g. empty string, null, undefined)\n  name = name || \"37i9dQZEVXbMDoHDwVN2tF\";\n\n  return retrieve(name, 'playlist').then(data => data.items); // leave out the unimportant parts of the response data\n}\n\nexport function searchAudioFeatures(id) {\n  // Replace variables in case they are falsy (e.g. empty string, null, undefined)\n  id = id || \"\";\n\n  return retrieve('?ids='+id, 'audio').then(data => data.audio_features[0]);\n}\n\n\nexport function retrieve(query, type) {\n  const payload = apiConfig.clientID+\":\"+apiConfig.secretID;\n  const encodedPayload = new Buffer(payload).toString(\"base64\");\n\n  let access_token = \"\";\n\n  const myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", \"Basic \" + encodedPayload);\n  const urlencoded = new URLSearchParams();\n  urlencoded.append(\"grant_type\", \"client_credentials\");\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: urlencoded,\n    redirect: 'follow'\n  };\n  const token = fetch(\"https://accounts.spotify.com/api/token\", requestOptions)\n  .then(response => response.json())\n  .catch(error => console.log('error', error));\n\n  async function getSong(type) {\n    let wait = await token.then(result => access_token = result.access_token);\n    let fetchString = (type === 'playlist') ?\n      apiConfig.playlistENDPOINT + query + '/tracks' :\n      apiConfig.audioENDPOINT + query;\n\n    let playlist = fetch(fetchString, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + access_token\n      }\n    }).then(response => {\n      return response.json();\n    });\n\n    return playlist;\n  }\n\n  return getSong(type);\n}\n\n// Saves a new song to your Cloud Firestore database.\nexport function saveSong(song) {\n  // Add a new song object to the database.\n  db.collection('playlist').doc(song.track.id).set({\n    id: song.track.id,\n    title: song.track.name,\n    preview: song.track.preview_url,\n    timestamp: firebase.firestore.FieldValue.serverTimestamp()\n  })\n  .catch(function(error) {\n    console.error('Error writing new message to database', error);\n  });\n  \n}\n\n// Loads a specific song from a firestore collection\nexport function loadSong(songID) {\n  console.log('Song in loadSong(): ', {songID});\n  return db.collection('playlist').doc(songID).get().then(function(doc) {\n    console.log(`in loadSong(): ${doc.id} => ${doc.data().title}`);\n  });\n}\n\n// Deletes a specific song from a firestore collection\nexport function deleteSong(id) {\n  db.collection(\"playlist\").doc(id).delete().then(function() {\n    console.log(\"Document successfully deleted!\");\n  }).catch(function(error) {\n      console.error(\"Error removing document: \", error);\n  });\n}\n\n// Loads the content of an entire database collection\nexport function loadCollection() {\n  return db.collection(\"playlist\").get().then((querySnapshot) => {\n    let collection = [];\n    querySnapshot.forEach((doc, i) => collection.push(doc.data()));\n    console.log({collection});\n    return collection;\n  });\n}\n","import React from 'react'\n\nconst NavbarPresentational = ({songs, muted, nav,  homepageControl, playlistControl, handleClick, openNav, onDrop, onDragOver, selectPlaylist}) => {\n  const [homepageAction, homepageMessage] = homepageControl;\n  const [playlistAction, playlistMessage] = playlistControl;\n  const nSongs = songs.length;\n  const dropEvent = onDrop;\n  const dragOverEvent = onDragOver;\n\n\n  return (\n    <div id=\"navbar\" className=\"navbar debug nothidden\">\n      {/* <h1 id=\"menu-title\" onClick={() => openNav(nav.navbarHidden)}>blobify</h1> */}\n      <div className=\"navbarContent\">\n      <h1 id=\"menu-title\">\n        <span href=\"/trending\">blobify.</span>\n       </h1>\n\n        <div className=\"navbarContent-playlist\">\n          {/* <button onClick={() => homepageAction()}>{homepageMessage}</button> */}\n          <h2 id=\"content-title\">Pick playlist</h2>\n            <h4 id=\"content-title\">Switch playlist to <span className=\"tooltip\">blobify songs <img className='question' src=\"info.svg\"  alt=\"info\" height='18' width='18'/>  \n\n                <span className=\"tooltiptext\">\n                What you see here is not random colors and shapes.<br/><br/>\n\n                A blob is a visual representation of a tracks <a className=\"link\" href=\"https://developer.spotify.com/documentation/web-api/reference/tracks/get-several-audio-features/\" target=\"_blank\">audio features</a> - data on its energy, tempo and key.<br/><br/><br/>\n                {/* \n                <div className=\"energy_explain\">\n                  <h4>the<h6>energy</h6>of the track</h4>\n                </div> */}\n                {/* <h4> */}\n                The ENERGY of the track is mapped to the number of dots in the blobs which determines its shape.<br/><br/> \n                {/* <h4>The higher the energy, the more aggressive blob.</h4><br/> */}\n\n                The TEMPO of the track is mapped to the speed of the blob.<br/><br/>\n\n                                                    \n                The KEY of the track is mapped to the color of the blob based on <a className=\"link\" href=\"http://www.harmonics.com/lucy/lsd/colors.html\" target=\"_blank\">Charles Fourier's theory.</a><br/><br/><br/>\n\n                {/* - We call it to blobify songs. <br/><br/> */}\n\n                {/* </h4> */}\n                Click on the blobs for more.\n                </span>\n              </span>\n            </h4>\n     \n          <div className=\"playlist\">\n \n        \n          <select>\n\n\n            <option value=\"1\" className='playlistButton selected-playlist' id='playlist37i9dQZF1DXcBWIGoYBM5M' onClick={() => selectPlaylist('37i9dQZF1DXcBWIGoYBM5M')}>Today's Top Hits</option>\n\n              {/* <button id='playlist37i9dQZEVXbMDoHDwVN2tF' className=\"selected-playlist\" onClick={() => selectPlaylist('37i9dQZEVXbMDoHDwVN2tF')}>Global Top 50</button> */}\n              {/* <button id='playlist37i9dQZEVXbeATsTOiMcX0' onClick={() => selectPlaylist('37i9dQZEVXbeATsTOiMcX0')}>Release Radar</button> */}\n              {/* <button id='playlist37i9dQZF1DWWBHeXOYZf74' onClick={() => selectPlaylist('37i9dQZF1DWWBHeXOYZf74')}>Pollen</button> */}\n\n              <option value=\"2\" className='playlistButton' id='playlist37i9dQZEVXbLiRSasKsNU9' onClick={() => selectPlaylist('37i9dQZEVXbLiRSasKsNU9')}>Global Viral 50</option>\n              <option value=\"3\" className='playlistButton' id='playlist37i9dQZF1DX4JAvHpjipBk' onClick={() => selectPlaylist('37i9dQZF1DX4JAvHpjipBk')}>New Music Friday</option>\n              <option value=\"4\" className='playlistButton' id='playlist37i9dQZF1DX2Wvd8VINtcF' onClick={() => selectPlaylist('37i9dQZF1DX2Wvd8VINtcF')}>Oyster</option>\n              <option value=\"5\" className='playlistButton' id='playlist65hCGG0JopRfj06rs1ilmJ' onClick={() => selectPlaylist('65hCGG0JopRfj06rs1ilmJ')}>Musikguiden i P3: Bäst just nu</option>\n\n            </select>\n            </div>\n\n            <h5 id=\"fetched\">Fetched from Spotify</h5>\n\n        </div>\n\n        <div className=\"navbarContent-save droppable drophere\"\n          onDragOver={dragOverEvent}\n          onDrop={dropEvent}>\n          <h2 id=\"content-title\">Save songs</h2>\n          <h4 id=\"content-title\">Drag and drop blobs here to add songs to your personal collection.</h4>\n\n          {/* <div className=\"playlist\"></div> */}\n          <div className=\"collection\">\n            <div id=\"miniPreview\" className=\"miniPreviewScroll\"></div>\n\n            {/*<div className=\"drophere playlistCss droppable\"\n                    onDragOver={dragOverEvent}\n                    onDrop={dropEvent}><br/></div>*/}\n\n            {\n              /* <button className=\"playlistCss droppable\"\n                    onClick={() => playlistAction()}\n                    onDragOver={dragOverEvent}\n                    onDrop={dropEvent}>\n                    {playlistMessage}\n            </button><br/> */}\n\n            <button id=\"collection-button\" onClick={() => playlistAction()}>{playlistMessage}</button>\n          </div>\n        </div>\n      </div>\n\n      <div className='muteButton mute' onClick={() => handleClick(muted.audioMuted)}></div>\n    </div>\n  )\n}\n\nexport default NavbarPresentational\n","export const addSong = song => ({\n  type: 'ADD_SONG',\n  song\n})\n\nexport const removeSong = song => ({\n  type: 'REMOVE_SONG',\n  song\n})\n\nexport const setCurrentPlaylist = songs => ({\n  type: 'SET_PLAYLIST', \n  songs\n})\n\nexport const loadPlaylist = id => ({\n  type: 'LOAD_PLAYLIST',\n  id\n})\n\nexport const muteAudio = bool =>({\n  type: 'MUTE_AUDIO',\n  bool\n})\n\nexport const hideNavbar = bool =>({\n  type: 'HIDE_NAVBAR',\n  bool\n})","import { connect } from 'react-redux'\nimport NavbarPresentational from './NavbarPresentational'\nimport { muteAudio, addSong, removeSong, loadPlaylist, setCurrentPlaylist, hideNavbar } from '../../actions'\nimport { saveSong, searchPlaylist } from '../../PlaylistModel'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    songs: state.currentPlaylist,\n    muted: state.audioMuted,\n    nav: state.navbarHidden\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  homepageControl: [() => ownProps.history.push(\"/trending\"), \"Back to the trending songs\"],\n  playlistControl: [\n    () => {let root = document.getElementById(\"miniPreview\");\n          while(root.firstChild) {root.removeChild(root.firstChild)};\n          ownProps.history.push(\"/myplaylist\")},\"View Collection\"],\n  handleClick: (muted) => {\n    dispatch(muteAudio(muted));\n\n    let muteButton = document.body.querySelector('.muteButton');\n    let currentClass = muteButton.classList[1];\n    //muteButton.classList.remove(currentClass);\n    //muteButton.classList.add((currentClass == 'mute'? 'unmute' : 'mute'));\n\n    let audioElements = document.getElementsByTagName(\"audio\");\n    \n    //sound on \n    if (muted===false){\n      console.log('mute');\n      muteButton.classList.remove('mute');\n      muteButton.classList.add('unmute');\n    \n    }\n    else if (muted===true){\n      console.log('unmute');\n      muteButton.classList.remove('unmute');\n      muteButton.classList.add('mute');\n    }\n    Object.keys(audioElements).map((i) =>\n      audioElements[i].muted = muted)\n    \n  },\n  openNav: (nav) => {\n    dispatch(hideNavbar(nav));\n\n    var navbarDiv = document.getElementById(\"navbar\");\n    let currentClass = navbarDiv.classList[2];\n\n    navbarDiv.classList.remove(currentClass);\n    navbarDiv.classList.add((currentClass == 'hidden'? 'nothidden' : 'hidden'));\n  },\n\n  onDrop: (ev) => {\n    console.log(\"Dropped into playlist\");\n    let song = ev.dataTransfer.getData(\"text/plain\");\n\n    //console.log(JSON.parse(song));\n    //dispatch(addSong(JSON.parse(song)));\n    saveSong(JSON.parse(song));\n\n    //If song is already in playlist then don't put it in here.\n    let miniPreview = document.getElementById(\"miniPreview\");\n    let root = document.getElementById(JSON.parse(song).track.id); //The original large blob\n    let rootCopy = document.getElementById(JSON.parse(song).track.id).cloneNode(true); //this is the mini blob\n\n    //Change the svg/blob dimensions.\n    rootCopy.getElementsByTagName('g')[0].setAttribute(\"transform\", \"matrix(1 0 0 1 0 -10) scale(0.2)\");\n    rootCopy.getElementsByTagName('svg')[0].setAttribute(\"height\", \"50\");\n    rootCopy.getElementsByTagName('svg')[0].setAttribute(\"width\", \"50\");\n    //rootCopy.removeAttribute(\"class\");\n    //rootCopy.addAttribute(\"class\", \"miniBlob\");\n    //Add a button event to miniBlob that removes the song from playlist and makes large blob visible.\n    rootCopy.addEventListener('click', function(ev){\n      dispatch(removeSong(JSON.parse(song)));\n      var children = miniPreview.children;\n      for(var i = 0; i < children.length; i++) {\n        var currChild = children[i];\n        if(currChild.getAttribute(\"id\") == JSON.parse(song).track.id) {\n          miniPreview.removeChild(currChild);\n          break;\n        }\n      }\n      //Make root element visible.\n      root.getElementsByTagName('svg')[0].setAttribute(\"opacity\", \"1.0\");\n    });\n    rootCopy.style.height = \"70px\";\n    rootCopy.style.width = \"60px\";\n\n    miniPreview.appendChild(rootCopy);\n    //Lower the div oppacity to show it's been added.\n    root.getElementsByTagName('svg')[0].setAttribute(\"opacity\", \"0.2\");\n  },\n  onDragOver: (ev) => {\n    ev.preventDefault()\n  },\n  selectPlaylist: (playlistID) => {\n    document.querySelectorAll('.selected-playlist')\n      .forEach(button => {\n        button.classList.remove('selected-playlist');\n        button.disabled = false;\n      });\n\n    let selectedButton = document.body.querySelector('#playlist'+playlistID);\n    selectedButton.classList.add('selected-playlist');\n    selectedButton.disabled = true;\n\n    searchPlaylist(playlistID).then(data => dispatch(setCurrentPlaylist(data)));\n    dispatch(loadPlaylist(playlistID));\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarPresentational);\n","import React, { useRef, useEffect } from 'react'\n\nconst SearchPresentational = ({ songs, whenDone, onResultsClick, onAdd, onLoadPlaylist }) => {\n  const [doneCallback, doneMessage] = whenDone;\n  const [addCallback, addMessage] = onAdd;\n\n  useEffect(() => {\n    onLoadPlaylist('37i9dQZEVXbMDoHDwVN2tF')\n  }, []);\n\n  return (\n    <div id=\"search\" className=\"mainContent debug\">\n      <div id=\"resultsDiv\" onClick={event => onResultsClick(event.target, songs)}></div>\n      {/* <button className=\"nav\" onClick={() => doneCallback()}>{doneMessage}</button> */}\n    </div>\n  )\n}\n\nexport default SearchPresentational\n","import SearchPresentational from './SearchPresentational'\nimport { connect } from 'react-redux'\nimport { addSong, setCurrentPlaylist, loadPlaylist } from '../../actions'\nimport { searchPlaylist, saveSong } from '../../PlaylistModel'\n\nconst mapStateToProps = (state) => {\n  return { songs: state.currentPlaylist }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  whenDone: [() => ownProps.history.push(\"/myplaylist\"), \"Go to My Playlist\"],\n  onResultsClick: (clickedNode, loadedSongs) => {\n        var clickOnSong = clickedNode.classList.contains(\"song\");\n        var clickOnAddButton = clickedNode.classList.contains(\"addButton\");\n        if (clickOnSong) {\n          const song_id = clickedNode.id;\n          //console.log(\"Song clicked: \" + song_id);\n\n          clickedNode.childNodes[1].classList.remove('buttonInvisible');\n          document.querySelectorAll('.buttonVisible').forEach(button => {\n            button.classList.remove('buttonVisible');\n            button.classList.add('buttonInvisible');\n          });\n          clickedNode.firstChild.classList.add('buttonVisible');\n        }\n\n        if (clickOnAddButton) {\n          //console.log(clickedNode.parentNode.id);\n          let clickedSongId = clickedNode.parentNode.id;\n          let song = loadedSongs.find(d => d.track.id == clickedSongId);\n          //console.log({song});\n\n          saveSong(song);\n          dispatch(addSong(song));\n        }\n    },\n  onAdd: [(song) => dispatch(addSong(song)), \"Add to the playlist\"],\n  onLoadPlaylist: (idPlaylist) => {\n    searchPlaylist(idPlaylist).then(data => dispatch(setCurrentPlaylist(data)));\n    dispatch(loadPlaylist(idPlaylist));\n  }\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPresentational);\n","import React from 'react'\n\nconst PlaylistPresentational = ({ songs, getSongCollection, whenDone, onDelete, displaySong, getBlob}) => {\n  const [doneCallback, doneMessage] = whenDone;\n  let collection = getSongCollection();\n\n  collection.then(coll => {\n    coll.map((song, i) => {\n      console.log('Song in displayPresentational: ', {song});\n      let row = document.createElement('tr');\n\n      //FIRST COLUMN: BLOB\n      //let blob = getBlob(song.id,0.8);\n      let column1 = document.createElement('td');\n      column1.innerHTML = getBlob(song.id,0.6);//column1.appendChild(blob);\n      row.appendChild(column1);\n\n      //SECOND COLUMN: DISPLAY SONG\n      let column2 = document.createElement('td');\n      //let disp = displaySong(song, column2);\n      row.appendChild(column2);\n\n      //THIRD COLUMN: SONG TITLE\n      let name = document.createTextNode(song.title);\n      let h4 = document.createElement('h4');\n      h4.appendChild(name);\n      let column3 = document.createElement('td');\n      column3.appendChild(h4);\n      row.appendChild(column3);\n\n      //FOURTH COLUMN: DELETE BUTTON\n      //let deleteMsg = document.createTextNode('Delete from playlist');\n      let deleteBtn = document.createElement('button');\n      //deleteBtn.appendChild(deleteMsg);\n      deleteBtn.setAttribute('className', 'cross delete-song');\n      deleteBtn.addEventListener(\"click\", () => onDelete(song));\n      let column4 = document.createElement('td');\n      column4.appendChild(deleteBtn);\n      row.appendChild(column4);\n\n      document.querySelector('tbody').appendChild(row);\n    });\n  })\n\n  return (\n    <div id=\"summary\" className=\"\">\n      <div id=\"summaryContent\"><h2>My blobify collection</h2>\n      <div>\n      <div className=\"cross close-summary\" onClick={() => doneCallback()}></div>\n      </div>\n        <table>\n          <thead>\n            <tr>\n              {/* <th>Track</th> */}\n              {/* <th>Release date</th> */}\n              <th> </th>\n\n              \n              <td>TOTAL SONGS {songs.length}</td>\n              <td></td>\n              <td></td>\n              <td><h4>Delete all</h4></td>\n              \n            </tr>\n          </thead>\n          <tbody id=\"tableBody\">\n            { /* songs.map((song, i) =>\n              <tr key={i}>\n                {getBlob(song.track.id,0.6)}\n                <td className=\"blob\">{displaySong(song)}</td>\n                <td>\n                  <h3>{song.track.name}</h3><br/>\n                  <h4>{song.track.artists.map(artist => {return artist.name})}</h4>\n                </td>\n                <td>\n                  {/* <h4 className=\"h4_black\">{song.track.album.release_date}</h4> }\n                </td>\n                <td><div className=\"cross delete-song\" onClick={() => onDelete(song)}></div></td>\n              </tr>\n            )*/}\n          </tbody>\n          <tfoot>\n          \n            {/* <button onClick={() => console.log(\"Export to spotify\")}>Export to Spotify</button> */}\n          </tfoot>\n          <button id=\"export-button\" onClick={() => console.log(\"Export to spotify\")}>Export to Spotify</button>\n        </table>\n      </div>\n      <div id=\"backgroundSummary\" onClick={() => doneCallback()}></div>\n    </div>\n  )\n\n}\n\nexport default PlaylistPresentational\n","import { connect } from 'react-redux'\nimport PlaylistPresentational from './PlaylistPresentational'\nimport { removeSong } from '../../actions'\nimport { createSongDisplay, getBlob, loadSong, deleteSong, loadCollection } from '../../PlaylistModel.js'\n\nconst mapStateToProps = (state) => {\n  return { songs: state.songs };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  getSongCollection: () => loadCollection(),\n  whenDone: [() => ownProps.history.push(\"/trending\"), \"Back to the trending songs\"],\n  onDelete: song => deleteSong(song.id),\n  displaySong: (song, el) => {\n    loadSong(song.id);\n    el.appendChild(createSongDisplay(song));\n  },\n  getBlob: (id,scale) => getBlob(id,scale)\n  /*call: getBlobs()*/\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistPresentational);\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\nimport Navbar from './Navbar/NavbarContainer'\nimport '../style.css'\nimport Search from './Search/SearchContainer'\nimport Playlist from './Playlist/PlaylistContainer'\n\nconst App = () => (\n    <Router>\n      <div className=\"flexParent\">\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/trending\" />} />\n        </Switch>\n        \n        <Route path=\"/trending\" component={Search}></Route>\n        <Route path=\"/myplaylist\" component={Playlist}></Route>\n        <Route component={Navbar}></Route>\n      </div>\n  </Router>\n)\n\nexport default App\n","function songs(state = [], action) {\n  let song = action.song;\n  switch (action.type) {\n    case 'ADD_SONG':\n      // Check if song is already in the playlist\n      console.log(state);\n      let alreadyPresent = state.some(d => d.track.id === song.track.id);\n      if (alreadyPresent) {\n        window.alert(`${song.track.name} is already present in the playlist.`);\n        return [...state];\n      } else {\n        return [...state, song];\n      }\n    case 'REMOVE_SONG':\n      return [...state].filter(d => d.track.id !== song.track.id);\n    default:\n      return [...state];\n  }\n}\n\nexport default songs\n","import {searchPlaylist, displaySongs} from '../PlaylistModel.js'\n\nconst currentPlaylist = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_PLAYLIST':\n      return action.songs;\n    case 'LOAD_PLAYLIST':\n      displaySongs(searchPlaylist(action.id)); //searchPlaylist() is a promise!\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default currentPlaylist\n","const audioMuted = (state = {}, action) => {\n  switch (action.type) {\n    case 'MUTE_AUDIO':\n      state.audioMuted = !action.bool;\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default audioMuted","const navbarHidden = (state = {}, action) => {\n  switch (action.type) {\n    case 'HIDE_NAVBAR':\n      state.navbarHidden = !action.bool;\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default navbarHidden","import { combineReducers } from 'redux'\nimport songs from './songs'\nimport currentPlaylist from './currentPlaylist'\nimport audioMuted from './audioMuted'\nimport navbarHidden from './navbarHidden'\n\nexport default combineReducers({\n  songs,\n  currentPlaylist,\n  audioMuted,\n  navbarHidden\n})\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\nimport './style.css'\n\n// Retrieve saved model\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {};\nconst store = createStore(rootReducer, persistedState);\n// Update stored state when model changes\nstore.subscribe(() =>\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}